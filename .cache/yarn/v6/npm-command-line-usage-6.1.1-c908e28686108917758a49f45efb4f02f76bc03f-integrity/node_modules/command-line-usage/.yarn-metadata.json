{
  "manifest": {
    "name": "command-line-usage",
    "author": {
      "name": "Lloyd Brookes",
      "email": "75pound@gmail.com"
    },
    "version": "6.1.1",
    "description": "Generates command-line usage information",
    "repository": {
      "type": "git",
      "url": "https://github.com/75lb/command-line-usage.git"
    },
    "license": "MIT",
    "files": [
      "lib/**/*.js",
      "index.js"
    ],
    "keywords": [
      "terminal",
      "command line",
      "usage",
      "generator"
    ],
    "engines": {
      "node": ">=8.0.0"
    },
    "scripts": {
      "docs": "jsdoc2md --no-gfm index.js lib/**/*.js > doc/api.md; echo",
      "test": "test-runner test/*.js",
      "cover": "nyc npm test && nyc report --reporter=text-lcov | coveralls"
    },
    "dependencies": {
      "array-back": "^4.0.1",
      "chalk": "^2.4.2",
      "table-layout": "^1.0.1",
      "typical": "^5.2.0"
    },
    "devDependencies": {
      "coveralls": "^3.1.0",
      "jsdoc-to-markdown": "^6.0.1",
      "nyc": "^15.1.0",
      "test-runner": "^0.6.3"
    },
    "standard": {
      "ignore": [
        "example"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-command-line-usage-6.1.1-c908e28686108917758a49f45efb4f02f76bc03f-integrity/node_modules/command-line-usage/package.json",
    "readmeFilename": "README.md",
    "readme": "[![view on npm](https://badgen.net/npm/v/command-line-usage)](https://www.npmjs.org/package/command-line-usage)\n[![npm module downloads](https://badgen.net/npm/dt/command-line-usage)](https://www.npmjs.org/package/command-line-usage)\n[![Gihub repo dependents](https://badgen.net/github/dependents-repo/75lb/command-line-usage)](https://github.com/75lb/command-line-usage/network/dependents?dependent_type=REPOSITORY)\n[![Gihub package dependents](https://badgen.net/github/dependents-pkg/75lb/command-line-usage)](https://github.com/75lb/command-line-usage/network/dependents?dependent_type=PACKAGE)\n[![Build Status](https://travis-ci.org/75lb/command-line-usage.svg?branch=master)](https://travis-ci.org/75lb/command-line-usage)\n[![Coverage Status](https://coveralls.io/repos/github/75lb/command-line-usage/badge.svg)](https://coveralls.io/github/75lb/command-line-usage)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n# command-line-usage\n\n***Upgraders, please check the [release notes](https://github.com/75lb/command-line-usage/releases).***\n\nA simple, data-driven module for creating a usage guide.\n\n## Synopsis\n\nA usage guide is created by first defining an arbitrary number of sections, e.g. a description section, synopsis, option list, examples, footer etc. Each section has an optional header, some content and must be of type <code><a href=\"#commandlineusagecontent\">content</a></code> or <code><a href=\"#commandlineusageoptionlist\">optionList</a></code>. This section data is passed to <code><a href=\"#commandlineusagesections--string-\">commandLineUsage()</a></code> which returns a usage guide.\n\nInline ansi formatting can be used anywhere within section content using [chalk template literal syntax](https://github.com/chalk/chalk#tagged-template-literal).\n\nFor example, this script:\n```js\nconst commandLineUsage = require('command-line-usage')\n\nconst sections = [\n  {\n    header: 'A typical app',\n    content: 'Generates something {italic very} important.'\n  },\n  {\n    header: 'Options',\n    optionList: [\n      {\n        name: 'input',\n        typeLabel: '{underline file}',\n        description: 'The input to process.'\n      },\n      {\n        name: 'help',\n        description: 'Print this usage guide.'\n      }\n    ]\n  }\n]\nconst usage = commandLineUsage(sections)\nconsole.log(usage)\n```\n\nOutputs this guide:\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/synopsis.png\" width=\"90%\">\n\n## Some examples\n\n### Typical\n\nA fairly typical usage guide with three sections - description, option list and footer. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-create-a-typical-usage-guide).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/simple.png\" width=\"90%\">\n\n### Option List groups\n\nDemonstrates breaking the option list up into groups. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-break-the-option-list-up-into-groups).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/groups.png\" width=\"90%\">\n\n### Banners\n\nA banner is created by adding the `raw: true` property to your `content`. This flag disables any formatting on the content, displaying it raw as supplied.\n\n#### Header\n\nDemonstrates a banner at the top. This example also adds a `synopsis` section. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-add-a-banner-to-your-usage-guide#code).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/header.png\" width=\"90%\">\n\n#### Footer\n\nDemonstrates a footer banner. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-add-a-banner-to-your-usage-guide#code-1).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/footer.png\" width=\"90%\">\n\n### Examples section (table layout)\n\nAn examples section is added. To achieve this table layout, supply the `content` as an array of objects. The property names of each object are not important, so long as they are consistent throughout the array. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-add-an-examples-section-to-your-usage-guide).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/example-columns.png\" width=\"90%\">\n\n### Advanced optionList layout\n\nThe `optionList` layout is fully configurable by setting the `tableOptions` property with an options object suitable for passing into [table-layout](https://github.com/75lb/table-layout#table-). This example overrides the default column widths and adds flame padding. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-use-advanced-optionList-table-formatting).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/option-list-options.png\" width=\"90%\">\n\n### Command list\n\nUseful if your app is command-driven, like git or npm. [Code](https://github.com/75lb/command-line-usage/wiki/How-to-add-a-command-list-to-your-usage-guide).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/command-list.png\" width=\"90%\">\n\n### Description section (table layout)\n\nDemonstrates supplying specific [table layout](https://github.com/75lb/table-layout) options to achieve more advanced layout. In this case the second column (containing the hammer and sickle) has a fixed `width` of 40 and `noWrap` enabled (as the input is already formatted as desired). [Code](https://github.com/75lb/command-line-usage/wiki/How-to-add-a-description-section-to-your-usage-guide).\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/description-columns.png\" width=\"90%\">\n\n### Real-life\n\nThe [polymer-cli](https://github.com/Polymer/polymer-cli/) usage guide is a good real-life example.\n\n<img src=\"https://raw.githubusercontent.com/75lb/command-line-usage/master/example/screens/polymer.png\" width=\"90%\">\n\n## Documentation\n\n* [API Reference](https://github.com/75lb/command-line-usage/blob/master/doc/api.md)\n* [The full list of examples](https://github.com/75lb/command-line-usage/wiki)\n\n* * *\n\n&copy; 2015-21 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-21 Lloyd Brookes <75pound@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/command-line-usage/-/command-line-usage-6.1.1.tgz#c908e28686108917758a49f45efb4f02f76bc03f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/command-line-usage/-/command-line-usage-6.1.1.tgz",
    "hash": "c908e28686108917758a49f45efb4f02f76bc03f",
    "integrity": "sha512-F59pEuAR9o1SF/bD0dQBDluhpT4jJQNWUHEuVBqpDmCUo6gPjCi+m9fCWnWZVR/oG6cMTUms4h+3NPl74wGXvA==",
    "registry": "npm",
    "packageName": "command-line-usage",
    "cacheIntegrity": "sha512-F59pEuAR9o1SF/bD0dQBDluhpT4jJQNWUHEuVBqpDmCUo6gPjCi+m9fCWnWZVR/oG6cMTUms4h+3NPl74wGXvA== sha1-yQjihoYQiRd1ikn0XvtPAvdrwD8="
  },
  "registry": "npm",
  "hash": "c908e28686108917758a49f45efb4f02f76bc03f"
}