{
  "manifest": {
    "name": "htmlnano",
    "version": "0.2.7",
    "description": "Modular HTML minifier, built on top of the PostHTML",
    "main": "index.js",
    "author": {
      "name": "Kirill Maltsev",
      "email": "maltsevkirill@gmail.com"
    },
    "license": "MIT",
    "scripts": {
      "compile": "rimraf lib/*.js && rimraf lib/modules/*.js && babel -d lib/ lib/",
      "lint": "eslint *.js lib/*.es6 lib/modules/*.es6 lib/presets/*.es6 test/",
      "pretest": "npm run lint && npm run compile",
      "test": ":",
      "posttest": "mocha --require @babel/register --recursive --check-leaks --globals addresses",
      "prepare": "npm run compile",
      "release:patch": "release-it patch -n"
    },
    "release-it": {
      "hooks": {
        "before:init": "npm test"
      }
    },
    "keywords": [
      "posthtml",
      "posthtml-plugin",
      "html",
      "postproccessor",
      "minifier"
    ],
    "babel": {
      "presets": [
        "@babel/env"
      ]
    },
    "dependencies": {
      "cssnano": "^4.1.10",
      "posthtml": "^0.13.4",
      "posthtml-render": "^1.2.2",
      "purgecss": "^2.3.0",
      "relateurl": "^0.2.7",
      "svgo": "^1.3.2",
      "terser": "^4.8.0",
      "uncss": "^0.17.3"
    },
    "devDependencies": {
      "@babel/cli": "^7.12.1",
      "@babel/core": "^7.12.3",
      "@babel/preset-env": "^7.12.1",
      "@babel/register": "^7.12.1",
      "babel-eslint": "^10.1.0",
      "eslint": "^7.4.0",
      "expect": "^26.1.0",
      "mocha": "^8.2.0",
      "release-it": "^14.1.0",
      "rimraf": "^3.0.2"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/posthtml/htmlnano.git"
    },
    "bugs": {
      "url": "https://github.com/posthtml/htmlnano/issues"
    },
    "homepage": "https://github.com/posthtml/htmlnano",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-htmlnano-0.2.7-8d116750c15571687edf56069a7819d41925bdcb-integrity/node_modules/htmlnano/package.json",
    "readmeFilename": "README.md",
    "readme": "# htmlnano\n[![npm version](https://badge.fury.io/js/htmlnano.svg)](http://badge.fury.io/js/htmlnano)\n[![Build Status](https://travis-ci.org/posthtml/htmlnano.svg?branch=master)](https://travis-ci.org/posthtml/htmlnano)\n\nModular HTML minifier, built on top of the [PostHTML](https://github.com/posthtml/posthtml). Inspired by [cssnano](http://cssnano.co/).\n\n> The author of htmlnano is available for hire as a full stack web developer:  https://kirillmaltsev.net/services\n\n\n## [Benchmark](https://github.com/maltsev/html-minifiers-benchmark/blob/master/README.md)\n[html-minifier@4.0.0]: https://www.npmjs.com/package/html-minifier\n[htmlnano@0.2.6]: https://www.npmjs.com/package/htmlnano\n\n| Website | Source (KB) | [html-minifier@4.0.0] | [htmlnano@0.2.6] |\n|---------|------------:|----------------:|-----------:|\n| [stackoverflow.blog](https://stackoverflow.blog/) | 76 | 67 | 66 |\n| [github.com](https://github.com/) | 131 | 70 | 117 |\n| [en.wikipedia.org](https://en.wikipedia.org/wiki/Main_Page) | 80 | 71 | 76 |\n| [npmjs.com](https://www.npmjs.com/features) | 31 | 25 | 28 |\n| **Avg. minify rate** | 0% | **22%** | **10%** |\n\n\n## Usage\n### Gulp\n```bash\nnpm install --save-dev gulp-htmlnano\n```\n\n```js\nconst gulp = require('gulp');\nconst htmlnano = require('gulp-htmlnano');\nconst options = {\n    removeComments: false\n};\n\ngulp.task('default', function() {\n    return gulp\n        .src('./index.html')\n        .pipe(htmlnano(options))\n        .pipe(gulp.dest('./build'));\n});\n```\n\n\n### Javascript\n```js\nconst htmlnano = require('htmlnano');\nconst options = {\n    removeEmptyAttributes: false, // Disable the module \"removeEmptyAttributes\"\n    collapseWhitespace: 'conservative' // Pass options to the module \"collapseWhitespace\"\n};\n// posthtml, posthtml-render, and posthtml-parse options\nconst postHtmlOptions = {\n    sync: true, // https://github.com/posthtml/posthtml#usage\n    lowerCaseTags: true, // https://github.com/posthtml/posthtml-parser#options\n    quoteAllAttributes: false, // https://github.com/posthtml/posthtml-render#options\n};\n\nhtmlnano\n    // \"preset\" arg might be skipped (see \"Presets\" section below for more info)\n    // \"postHtmlOptions\" arg might be skipped\n    .process(html, options, preset, postHtmlOptions)\n    .then(function (result) {\n        // result.html is minified\n    })\n    .catch(function (err) {\n        console.error(err);\n    });\n```\n\n\n### PostHTML\nJust add `htmlnano` as a final plugin:\n```js\nconst posthtml = require('posthtml');\nconst options = {\n    removeComments: false, // Disable the module \"removeComments\"\n    collapseWhitespace: 'conservative' // Pass options to the module \"collapseWhitespace\"\n};\nconst posthtmlPlugins = [\n    /* other PostHTML plugins */\n\n    require('htmlnano')(options)\n];\n\nconst postHtmlOptions = {\n    // See PostHTML docs\n};\n\nposthtml(posthtmlPlugins)\n    .process(html, posthtmlOptions)\n    .then(function (result) {\n        // result.html is minified\n    })\n    .catch(function (err) {\n        console.error(err);\n    });\n```\n\n\n\n## Presets\nA preset is just an object with modules config.\n\nCurrently the following presets are available:\n- [safe](https://github.com/posthtml/htmlnano/blob/master/lib/presets/safe.es6) — a default preset for minifying a regular HTML in a safe way (without breaking anything)\n- [ampSafe](https://github.com/posthtml/htmlnano/blob/master/lib/presets/ampSafe.es6) - same as `safe` preset but for [AMP pages](https://www.ampproject.org/)\n- [max](https://github.com/posthtml/htmlnano/blob/master/lib/presets/max.es6) - maximal minification (might break some pages)\n\n\nYou can use them the following way:\n```js\nconst htmlnano = require('htmlnano');\nconst ampSafePreset = require('htmlnano').presets.ampSafe;\nconst options = {\n    // Your options\n};\n\nhtmlnano\n    .process(html, options, ampSafePreset)\n    .then(function (result) {\n        // result.html is minified\n    })\n    .catch(function (err) {\n        console.error(err);\n    });\n```\n\nIf you skip `preset` argument [`safe`](https://github.com/posthtml/htmlnano/blob/master/lib/presets/safe.es6) preset would be used by default.\n\n\nIf you'd like to define your very own config without any presets pass an empty object as a preset:\n```js\nconst htmlnano = require('htmlnano');\nconst options = {\n    // Your options\n};\n\nhtmlnano\n    .process(html, options, {})\n    .then(function (result) {\n        // result.html is minified\n    })\n    .catch(function (err) {\n        console.error(err);\n    });\n```\n\n\nYou might create also your own presets:\n```js\nconst htmlnano = require('htmlnano');\n// Preset for minifying email templates\nconst emailPreset = {\n    mergeStyles: true,\n    minifyCss: {\n        safe: true\n    },\n};\n\nconst options = {\n    // Some specific options\n};\n\nhtmlnano\n    .process(html, options, emailPreset)\n    .then(function (result) {\n        // result.html is minified\n    })\n    .catch(function (err) {\n        console.error(err);\n    });\n```\n\nFeel free [to submit a PR](https://github.com/posthtml/htmlnano/issues/new) with your preset if it might be useful for other developers as well.\n\n\n\n## Modules\nBy default the modules should only perform safe transforms, see the module documentation below for details.\nYou can disable modules by passing `false` as option, and enable them by passing `true`.\n\n\n### collapseAttributeWhitespace\nCollapse redundant white spaces in list-like attributes (`class`, `rel`, `ping`).\n\n##### Example\nSource:\n```html\n<div class=\" content  page  \"></div>\n```\n\nMinified:\n```html\n<div class=\"content page\"></div>\n```\n\n\n\n### collapseWhitespace\nCollapses redundant white spaces (including new lines). It doesn’t affect white spaces in the elements `<style>`, `<textarea>`, `<script>` and `<pre>`.\n\n##### Options\n- `conservative` — collapses all redundant white spaces to 1 space (default)\n- `aggressive` — collapses all whitespaces that are redundant and safe to remove\n- `all` — collapses all redundant white spaces\n\n##### Side effects\n\n*all*  \n`<i>hello</i> <i>world</i>` or `<i>hello</i><br><i>world</i>` after minification will be rendered as `helloworld`.\nTo prevent that use either the default `conservative` option, or the `aggressive` option.\n\n##### Example\nSource:\n```html\n<div>\n    hello  world!\n    \\t<a href=\"#\">answer</a>\n    <style>div  { color: red; }  </style>\n\\t\\t<main></main>\n</div>\n```\n\nMinified (with `all`):\n```html\n<div>hello world!<a href=\"#\">answer</a><style>div  { color: red; }  </style><main></main></div>\n```\n\nMinified (with `aggressive`):\n```html\n<div> hello world! <a href=\"#\">answer</a> <style>div  { color: red; }  </style><main></main></div>\n```\n\nMinified (with `conservative`):\n```html\n<div> hello world! <a href=\"#\">answer</a> <style>div  { color: red; }  </style> <main></main> </div>\n```\n\n\n### deduplicateAttributeValues\nRemove duplicate values from list-like attributes (`class`, `rel`, `ping`).\n\n##### Example\nSource:\n```html\n<div class=\"sidebar left sidebar\"></div>\n```\n\nMinified:\n```html\n<div class=\"sidebar left\"></div>\n```\n\n\n### removeComments\n##### Options\n- `safe` – removes all HTML comments except the conditional comments and  [`<!--noindex--><!--/noindex-->`](https://yandex.com/support/webmaster/controlling-robot/html.xml) (default)\n- `all` — removes all HTML comments\n\n##### Example\nSource:\n```html\n<div><!-- test --></div>\n```\n\nMinified:\n```html\n<div></div>\n```\n\n\n### removeEmptyAttributes\nRemoves empty [safe-to-remove](https://github.com/posthtml/htmlnano/blob/master/lib/modules/removeEmptyAttributes.es6) attributes.\n\n##### Side effects\nThis module could break your styles or JS if you use selectors with attributes:\n```CSS\nimg[style=\"\"] {\n    margin: 10px;\n}\n```\n\n##### Example\nSource:\n```html\n<img src=\"foo.jpg\" alt=\"\" style=\"\">\n```\n\nMinified:\n```html\n<img src=\"foo.jpg\" alt=\"\">\n```\n\n### removeAttributeQuotes\nRemove quotes around attributes when possible, see [HTML Standard - 12.1.2.3 Attributes - Unquoted attribute value syntax](https://html.spec.whatwg.org/multipage/syntax.html#attributes-2).\n\n##### Example\nSource:\n```html\n<div class=\"foo\" title=\"hello world\"></div>\n```\n\nMinified:\n```html\n<div class=foo title=\"hello world\"></div>\n```\n\n##### Notice\nThe feature is implemented by [posthtml-render's `quoteAllAttributes`](https://github.com/posthtml/posthtml-render#options), which is one of the PostHTML's option. So `removeAttributeQuotes` could be overriden by other PostHTML's plugins and PostHTML's configuration.\n\nFor example:\n\n```js\nposthtml([\n    htmlnano({\n        removeAttributeQuotes: true\n    })\n]).process(html, {\n    quoteAllAttributes: true\n})\n```\n\n`removeAttributeQuotes` will not work because PostHTML's `quoteAllAttributes` takes the priority.\n\n### removeUnusedCss\n\nRemoves unused CSS inside `<style>` tags with either [uncss](https://github.com/uncss/uncss)\nor [PurgeCSS](https://github.com/FullHuman/purgecss).\n\n#### With uncss\n\n##### Options\nSee [the documentation of uncss](https://github.com/uncss/uncss) for all supported options.\n\nuncss options can be passed directly to the `removeUnusedCss` module:\n```js\nhtmlnano.process(html, {\n    removeUnusedCss: {\n        ignore: ['.do-not-remove']\n    }\n});\n```\n\nThe following uncss options are ignored if passed to the module:\n\n-   `stylesheets`\n-   `ignoreSheets`\n-   `raw`\n\n#### With PurgeCSS\n\nUse PurgeCSS instead of uncss by adding `tool: 'purgeCSS'` to the options.\n\n##### Options\n\nSee [the documentation of PurgeCSS](https://www.purgecss.com) for all supported options.\n\nPurgeCSS options can be passed directly to the `removeUnusedCss` module:\n```js\nhtmlnano.process(html, {\n    removeUnusedCss: {\n        tool: 'purgeCSS',\n        whitelist: ['.do-not-remove']\n    }\n});\n```\n\nThe following PurgeCSS options are ignored if passed to the module:\n\n-   `content`\n-   `css`\n-   `extractors`\n\n##### Example\nSource:\n```html\n<div class=\"b\">\n    <style>\n        .a {\n            margin: 10px 10px 10px 10px;\n        }\n        .b {\n            color: #ff0000;\n        }\n    </style>\n</div>\n```\n\nOptimized:\n```html\n<div class=\"b\">\n    <style>\n        .b {\n            color: #ff0000;\n        }\n    </style>\n</div>\n```\n\n\n### minifyCss\nMinifies CSS with [cssnano](http://cssnano.co/) inside `<style>` tags and `style` attributes.\n\n##### Options\nSee [the documentation of cssnano](http://cssnano.co/optimisations/) for all supported optimizations.\nBy default CSS is minified with preset `default`, which shouldn't have any side-effects.\n\nTo use another preset or disabled some optimizations pass options to `minifyCss` module:\n```js\nhtmlnano.process(html, {\n    minifyCss: {\n        preset: ['default', {\n            discardComments: {\n                removeAll: true,\n            },\n        }]\n    }\n});\n```\n\n##### Example\nSource:\n```html\n<div>\n    <style>\n        h1 {\n            margin: 10px 10px 10px 10px;\n            color: #ff0000;\n        }\n    </style>\n</div>\n```\n\nMinified:\n```html\n<div>\n    <style>h1{margin:10px;color:red}</style>\n</div>\n```\n\n\n### minifyJs\nMinifies JS using [Terser](https://github.com/fabiosantoscode/terser) inside `<script>` tags.\n\n##### Options\nSee [the documentation of Terser](https://github.com/fabiosantoscode/terser#api-reference) for all supported options.\nTerser options can be passed directly to the `minifyJs` module:\n```js\nhtmlnano.process(html, {\n    minifyJs: {\n        output: { quote_style: 1 },\n    },\n});\n```\n\n\n\n##### Example\nSource:\n```html\n<div>\n    <script>\n        /* comment */\n        const foo = function () {\n\n        };\n    </script>\n</div>\n```\n\nMinified:\n```html\n<div>\n    <script>const foo=function(){};</script>\n</div>\n```\n\n\n### minifyJson\nMinifies JSON inside `<script type=\"application/json\"></script>`.\n\n##### Example\nSource:\n```html\n<script type=\"application/json\">\n{\n    \"user\": \"me\"\n}\n</script>\n```\n\nMinified:\n```html\n<script type=\"application/json\">{\"user\":\"me\"}</script>\n```\n\n\n### minifySvg\nMinifies SVG inside `<svg>` tags using [SVGO](https://github.com/svg/svgo/).\n\n##### Options\nSee [the documentation of SVGO](https://github.com/svg/svgo/blob/master/README.md) for all supported options.\nSVGO options can be passed directly to the `minifySvg` module:\n```js\nhtmlnano.process(html, {\n    minifySvg: {\n        plugins: [\n            { collapseGroups: false },\n        ],\n    },\n});\n```\n\n##### Example\nSource:\n```html\n<svg version=\"1.1\" baseProfile=\"full\" width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"100%\" height=\"100%\" fill=\"red\" />\n\n    <circle cx=\"150\" cy=\"100\" r=\"80\" fill=\"green\" />\n\n    <text x=\"150\" y=\"125\" font-size=\"60\" text-anchor=\"middle\" fill=\"white\">SVG</text>\n</svg>`\n```\n\nMinified:\n```html\n<svg baseProfile=\"full\" width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"100%\" height=\"100%\" fill=\"red\"/><circle cx=\"150\" cy=\"100\" r=\"80\" fill=\"green\"/><text x=\"150\" y=\"125\" font-size=\"60\" text-anchor=\"middle\" fill=\"#fff\">SVG</text></svg>\n```\n\n\n### removeRedundantAttributes\nRemoves redundant attributes from tags if they contain default values:\n- `method=\"get\"` from `<form>`\n- `type=\"text\"` from `<input>`\n- `type=\"submit\"` from `<button>`\n- `language=\"javascript\"` and `type=\"text/javascript\"` from `<script>`\n- `charset` from `<script>` if it's an external script\n- `media=\"all\"` from `<style>` and `<link>`\n- `type=\"text/css\"` from `<link rel=\"stylesheet\">`\n\n##### Options\nThis module is disabled by default, change option to true to enable this module.\n\n##### Side effects\nThis module could break your styles or JS if you use selectors with attributes:\n```CSS\nform[method=\"get\"] {\n    color: red;\n}\n```\n\n##### Example\nSource:\n```html\n<form method=\"get\">\n    <input type=\"text\">\n</form>\n```\n\nMinified:\n```html\n<form>\n    <input>\n</form>\n```\n\n\n### collapseBooleanAttributes\nCollapses boolean attributes (like `disabled`) to the minimized form.\n\n##### Options\nIf your document uses [AMP](https://www.ampproject.org/), set the `amphtml` flag\nto collapse additonal, AMP-specific boolean attributes:\n```Json\n\"collapseBooleanAttributes\": {\n    \"amphtml\": true\n}\n```\n\n##### Side effects\nThis module could break your styles or JS if you use selectors with attributes:\n```CSS\nbutton[disabled=\"disabled\"] {\n    color: red;\n}\n```\n\n##### Example\nSource:\n```html\n<button disabled=\"disabled\">click</button>\n<script defer=\"\"></script>\n```\n\nMinified:\n```html\n<button disabled>click</button>\n<script defer></script>\n```\n\n\n### mergeStyles\nMerges multiple `<style>` with the same `media` and `type` into one tag.\n`<style scoped>...</style>` are skipped.\n\n##### Example\nSource:\n```html\n<style>h1 { color: red }</style>\n<style media=\"print\">div { color: blue }</style>\n\n<style type=\"text/css\" media=\"print\">a {}</style>\n<style>div { font-size: 20px }</style>\n```\n\nMinified:\n```html\n<style>h1 { color: red } div { font-size: 20px }</style>\n<style media=\"print\">div { color: blue } a {}</style>\n```\n\n\n### mergeScripts\nMerge multiple `<script>` with the same attributes (`id, class, type, async, defer`) into one (last) tag.\n\n##### Side effects\nIt could break your code if the tags with different attributes share the same variable scope.\nSee the example below.\n\n##### Example\nSource:\n```html\n<script>const foo = 'A:1';</script>\n<script class=\"test\">foo = 'B:1';</script>\n<script type=\"text/javascript\">foo = 'A:2';</script>\n<script defer>foo = 'C:1';</script>\n<script>foo = 'A:3';</script>\n<script defer=\"defer\">foo = 'C:2';</script>\n<script class=\"test\" type=\"text/javascript\">foo = 'B:2';</script>\n```\n\nMinified:\n```html\n<script>const foo = 'A:1'; foo = 'A:2'; foo = 'A:3';</script>\n<script defer=\"defer\">foo = 'C:1'; foo = 'C:2';</script>\n<script class=\"test\" type=\"text/javascript\">foo = 'B:1'; foo = 'B:2';</script>\n```\n\n\n### custom\nIt's also possible to pass custom modules in the minifier.\nAs a function:\n```js\nconst options = {\n    custom: function (tree, options) {\n        // Some minification\n        return tree;\n    }\n};\n```\n\nOr as a list of functions:\n```js\nconst options = {\n    custom: [\n        function (tree, options) {\n            // Some minification\n            return tree;\n        },\n\n        function (tree, options) {\n            // Some other minification\n            return tree;\n        }\n    ]\n};\n```\n\n`options` is an object with all options that were passed to the plugin.\n\n### sortAttributesWithLists\nSort values in list-like attributes (`class`, `rel`, `ping`).\n\nThe module won't impact the plain-text size of the output. However it will improve the compression ratio of gzip/brotli used in HTTP compression.\n\n##### Example\nSource:\n```html\n<div class=\"foo baz bar\">click</div>\n```\n\nProcessed:\n```html\n<div class=\"bar baz foo\">click</div>\n```\n\n### minifyUrls\nConvert absolute URL to relative URL using [relateurl](https://www.npmjs.com/package/relateurl).\n\n##### Options\n\nThe base URL to resolve against. Support `String` & `URL`.\n\n```js\nhtmlnano.process(html, {\n    minifyUrls: 'https://example.com' // Valid configuration\n});\n```\n\n```js\nhtmlnano.process(html, {\n    minifyUrls: new URL('https://example.com') // Valid configuration\n});\n```\n\n```js\nhtmlnano.process(html, {\n    minifyUrls: false // The module will be disabled\n});\n```\n\n```js\nhtmlnano.process(html, {\n    minifyUrls: true // Invalid configuration, the module will be disabled\n});\n```\n\n##### Example\n\n**Basic Usage**\n\nConfiguration:\n\n```js\nhtmlnano.process(html, {\n    minifyUrls: 'https://example.com'\n});\n```\n\nSource:\n\n```html\n<a href=\"https://example.com/foo/bar/baz\">bar</a>\n```\n\nMinified:\n\n```html\n<a href=\"foo/bar/baz\">bar</a>\n```\n\n**With sub-directory**\n\nConfiguration:\n\n```js\nhtmlnano.process(html, {\n    minifyUrls: 'https://example.com/foo/baz/'\n});\n```\n\nSource:\n\n```html\n<a href=\"https://example.com/foo/bar\">bar</a>\n```\n\nMinified:\n\n```html\n<a href=\"../bar\">bar</a>\n```\n\n## Contribute\nSince the minifier is modular, it's very easy to add new modules:\n\n1. Create a ES6-file inside `lib/modules/` with a function that does some minification. For example you can check [`lib/modules/example.es6`](https://github.com/posthtml/htmlnano/blob/master/lib/modules/example.es6).\n\n2. Add the module's name into one of those [presets](https://github.com/posthtml/htmlnano/tree/master/lib/presets). You can choose either `ampSafe`, `max`, or `safe`.\n\n3. Create a JS-file inside `test/modules/` with some unit-tests.\n\n4. Describe your module in the section \"[Modules](https://github.com/posthtml/htmlnano/blob/master/README.md#modules)\".\n\n5. Send me a pull request.\n\nOther types of contribution (bug fixes, documentation improves, etc) are also welcome!\nWould like to contribute, but don't have any ideas what to do? Check out [our issues](https://github.com/posthtml/htmlnano/labels/help%20wanted).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Kirill Maltsev <maltsevkirill@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/htmlnano/-/htmlnano-0.2.7.tgz#8d116750c15571687edf56069a7819d41925bdcb",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/htmlnano/-/htmlnano-0.2.7.tgz",
    "hash": "8d116750c15571687edf56069a7819d41925bdcb",
    "integrity": "sha512-ozbK3npguK3MTn77WCKngBtCDhc94fmEptPQsn+dO+uIWoEghIMKsjzCMnDJuu403M01ePg9GA5MpXhRBQ3PVg==",
    "registry": "npm",
    "packageName": "htmlnano",
    "cacheIntegrity": "sha512-ozbK3npguK3MTn77WCKngBtCDhc94fmEptPQsn+dO+uIWoEghIMKsjzCMnDJuu403M01ePg9GA5MpXhRBQ3PVg== sha1-jRFnUMFVcWh+31YGmngZ1Bklvcs="
  },
  "registry": "npm",
  "hash": "8d116750c15571687edf56069a7819d41925bdcb"
}