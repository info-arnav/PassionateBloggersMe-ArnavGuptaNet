{
  "manifest": {
    "name": "merge-source-map",
    "version": "1.0.4",
    "description": "Merge old source map and new source map in multi-transform flow",
    "main": "index.js",
    "scripts": {
      "test": "nyc tape test/*.js",
      "lint": "eslint index.js 'test/**/*.js'",
      "version": "npm run lint && npm run test"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/keik/merge-source-map.git"
    },
    "author": {
      "name": "keik",
      "email": "k4t0.kei@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/keik/merge-source-map/issues"
    },
    "keywords": [
      "sourcemap",
      "source-map"
    ],
    "dependencies": {
      "source-map": "^0.5.6"
    },
    "devDependencies": {
      "babel-core": "^6.25.0",
      "babel-plugin-syntax-object-rest-spread": "^6.13.0",
      "babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
      "babel-plugin-transform-es2015-spread": "^6.22.0",
      "coffee-script": "^1.12.6",
      "convert-source-map": "^1.5.0",
      "escodegen": "^1.8.1",
      "eslint": "^3.19.0",
      "esprima": "^3.1.3",
      "estraverse": "^4.2.0",
      "nyc": "^8.4.0",
      "tape": "^4.6.3"
    },
    "files": [],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-merge-source-map-1.0.4-a5de46538dae84d4114cc5ea02b4772a6346701f-integrity/node_modules/merge-source-map/package.json",
    "readmeFilename": "README.md",
    "readme": "# merge-source-map\n\n[![npm-version](https://img.shields.io/npm/v/merge-source-map.svg?style=flat-square)](https://npmjs.org/package/merge-source-map)\n[![travis-ci](https://img.shields.io/travis/keik/merge-source-map.svg?style=flat-square)](https://travis-ci.org/keik/merge-source-map)\n[![Coverage Status](https://img.shields.io/coveralls/keik/merge-source-map.svg?style=flat-square)](https://coveralls.io/github/keik/merge-source-map)\n\nMerge old source map and new source map in multi-transform flow\n\n\n# API\n\n```javascript\nvar merge = require('merge-source-map')\n```\n\n\n## `merge(oldMap, newMap)`\n\nMerge old source map and new source map and return merged.\nIf old or new source map value is falsy, return another one as it is.\n\n<dl>\n  <dt>\n    <code>oldMap</code> : <code>object|undefined</code>\n  </dt>\n  <dd>\n    old source map object\n  </dd>\n\n  <dt>\n    <code>newmap</code> : <code>object|undefined</code>\n  </dt>\n  <dd>\n    new source map object\n  </dd>\n</dl>\n\n\n# Example\n\n```javascript\nvar esprima    = require('esprima'),\n    estraverse = require('estraverse'),\n    escodegen  = require('escodegen'),\n    convert    = require('convert-source-map'),\n    merge      = require('merge-source-map')\n\nconst CODE = 'a = 1',\n      FILEPATH = 'a.js'\n\n// create AST of original code\nvar ast = esprima.parse(CODE, {sourceType: 'module', loc: true})\n\n// transform AST of original code\nestraverse.replace(ast, {\n  enter: function(node, parent) { /* change AST */ },\n  leave: function(node, parent) { /* change AST */ }\n})\n\n// generate code and source map from transformed AST\nvar gen = escodegen.generate(ast, {\n  sourceMap: FILEPATH,\n  sourceMapWithCode: true,\n  sourceContent: CODE\n})\n\n// merge old source map and new source map\nvar oldMap = convert.fromSource(CODE) && convert.fromSource(CODE).toObject(),\n    newMap = JSON.parse(gen.map.toString()),\n    mergedMap = merge(oldMap, newMap),\n    mapComment = convert.fromObject(mergedMap).toComment()\n\n// attach merge source map to transformed code\nvar transformed = gen.code + '\\n' + mapComment\n\nconsole.log(transformed);\n```\n\n\n# Test\n\n```\n% npm install\n% npm test\n```\n\n\n# License\n\nMIT (c) keik\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) keik <k4t0.kei@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/merge-source-map/-/merge-source-map-1.0.4.tgz#a5de46538dae84d4114cc5ea02b4772a6346701f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/merge-source-map/-/merge-source-map-1.0.4.tgz",
    "hash": "a5de46538dae84d4114cc5ea02b4772a6346701f",
    "integrity": "sha1-pd5GU42uhNQRTMXqArR3KmNGcB8=",
    "registry": "npm",
    "packageName": "merge-source-map",
    "cacheIntegrity": "sha512-PGSmS0kfnTnMJCzJ16BLLCEe6oeYCamKFFdQKshi4BmM6FUwipjVOcBFGxqtQtirtAG4iZvHlqST9CpZKqlRjA== sha1-pd5GU42uhNQRTMXqArR3KmNGcB8="
  },
  "registry": "npm",
  "hash": "a5de46538dae84d4114cc5ea02b4772a6346701f"
}