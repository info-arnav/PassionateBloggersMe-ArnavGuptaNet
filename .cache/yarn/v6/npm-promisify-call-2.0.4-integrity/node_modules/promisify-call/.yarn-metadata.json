{
  "manifest": {
    "name": "promisify-call",
    "version": "2.0.4",
    "description": "Promisify a function call so users can call a function with a callback or get a promise",
    "main": "index.js",
    "scripts": {
      "test": "ava -v",
      "docs": "jsdoc2md \"index.js\" --heading-depth 3 --template readme.hbs > README.md"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/bojand/promisify-call.git"
    },
    "keywords": [
      "promise",
      "callback",
      "promisify"
    ],
    "author": {
      "name": "Bojan Djurkovic",
      "email": "dbojan@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/bojand/promisify-call/issues"
    },
    "homepage": "https://github.com/bojand/promisify-call#readme",
    "dependencies": {
      "with-callback": "^1.0.2"
    },
    "devDependencies": {
      "ava": "^0.17.0",
      "babel-eslint": "^7.1.1",
      "jsdoc-to-markdown": "^2.0.1",
      "standard": "^8.5.0"
    },
    "engines": {
      "node": ">=4.0"
    },
    "ava": {
      "files": [
        "test/*.test.js"
      ]
    },
    "standard": {
      "parser": "babel-eslint"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-promisify-call-2.0.4-integrity/node_modules/promisify-call/package.json",
    "readmeFilename": "README.md",
    "readme": "# promisify-call\n\n[![npm version](https://img.shields.io/npm/v/promisify-call.svg?style=flat-square)](https://www.npmjs.com/package/promisify-call)\n[![build status](https://img.shields.io/travis/bojand/promisify-call/master.svg?style=flat-square)](https://travis-ci.org/bojand/promisify-call)\n\nPromisify a function call so users can call a function with a callback or get a promise.\n* **2.0** works only with native `Promise` so requires Node >= 4.0.\n* **1.0** uses [Bluebird](www.bluebirdjs.com) and should work with older Node.js\n\n## Installation\n\n`npm install promisify-call`\n\n## Usage\n\n```js\nfunction _uppercase(param, fn) {\n  setTimeout(() => {\n    return fn(null, param.toUpperCase());\n  }, 50);\n}\n\nfunction uppercase(param, fn) {\n  return promisifyCall(this, _uppercase, ...arguments);\n}\n\n// now we can call it using callback-style\nuppercase('foo', (err, res) => {\n  console.log(res); // FOO\n});\n\n// OR promise style\nconst res = await uppercase('foo');\nconsole.log(res); // FOO\n```\n\n## API Reference\n\n<a name=\"promisifyCall\"></a>\n\n### promisifyCall(ctx, fn, args) â‡’ <code>undefined</code> &#124; <code>\\*</code> &#124; <code>Promise</code>\nPromisifies the call to <code>fn</code> if appropriate given the arguments.\nCalls the function <code>fn</code> either using callback style if last argument is a function.\nIf last argument is not a function, <code>fn</code> is called returning a promise.\nThis lets you create API that can be called in either fashions.\n\n**Kind**: global function  \n**Returns**: <code>undefined</code> &#124; <code>\\*</code> &#124; <code>Promise</code> - Promise if promisified  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| ctx | <code>Object</code> | context / this |\n| fn | <code>function</code> | The function to call |\n| args | <code>arguments</code> | Arguments |\n\n## License\n\nCopyright 2015 Bojan D.\n\nLicensed under the MIT License.\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Bojan D.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/promisify-call/-/promisify-call-2.0.4.tgz",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/promisify-call/-/promisify-call-2.0.4.tgz",
    "hash": "",
    "integrity": "sha1-1IwtRWUszM1SgB3ey9UzptS9X7o=",
    "registry": "npm",
    "packageName": "promisify-call",
    "cacheIntegrity": "sha512-ZX68J1+1Pe0I8NC0P6Ji3fDDcJceVfpoygfDLgdb1fp5vW9IRlwSpDaxe1T5HgwchyHV2DsL/pWzWikUiWEbLQ== sha1-1IwtRWUszM1SgB3ey9UzptS9X7o="
  },
  "registry": "npm",
  "hash": "657ebc275fb53ded08f0d0b43fa262ddf0c370971e55fa68ca07c32e075bd5fa79bd6f48465c12a436b17b54f91e0c1c8721d5d83b0bfe95b35a291489611b2d"
}