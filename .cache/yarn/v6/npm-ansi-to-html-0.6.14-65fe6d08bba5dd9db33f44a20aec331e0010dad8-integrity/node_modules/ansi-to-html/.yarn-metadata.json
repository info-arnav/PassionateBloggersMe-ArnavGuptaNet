{
  "manifest": {
    "name": "ansi-to-html",
    "version": "0.6.14",
    "description": "Convert ansi escaped text streams to html.",
    "main": "lib/ansi_to_html.js",
    "engines": {
      "node": "*"
    },
    "scripts": {
      "build": "babel src --out-dir lib",
      "build:watch": "babel src --out-dir lib --watch",
      "lint": "eslint src test",
      "test": "mocha --reporter tap",
      "test:watch": "mocha --reporter tap --watch ./test ./"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/rburns/ansi-to-html.git"
    },
    "homepage": "https://github.com/rburns/ansi-to-html",
    "bugs": {
      "url": "https://github.com/rburns/ansi-to-html/issues"
    },
    "keywords": [
      "ansi",
      "html"
    ],
    "author": {
      "name": "Rob Burns",
      "email": "rburns@paiges.net",
      "url": "http://rburns.paiges.net/"
    },
    "contributors": [
      {
        "name": "Dane Stuckel",
        "email": "dane.stuckel@gmail.com"
      },
      {
        "name": "Michael",
        "email": "michael@riesd.com"
      },
      {
        "name": "Thorsten Kohnhorst",
        "email": "monsterkodi@gmx.net"
      },
      {
        "name": "Yoram Grahame",
        "email": "yoz@yoz.com"
      },
      {
        "name": "Patrick Steele-Idem",
        "email": "pnidem@gmail.com"
      },
      {
        "name": "Paul Grime",
        "email": "gitgrimbo@gmail.com"
      },
      {
        "name": "NeeEoo",
        "url": "https://github.com/NeeEoo"
      },
      {
        "name": "Brett Zamir",
        "url": "https://github.com/brettz9"
      },
      {
        "name": "Piotr Monwid-Olechnowicz",
        "url": "https://github.com/hasparus"
      },
      {
        "name": "Lior Chervinsky",
        "url": "https://github.com/lior-chervinsky"
      },
      {
        "name": "Maple Miao",
        "url": "https://github.com/mapleeit"
      }
    ],
    "license": "MIT",
    "devDependencies": {
      "@babel/cli": "^7.4.4",
      "@babel/core": "^7.4.5",
      "@babel/preset-env": "^7.4.5",
      "chai": "~4.2.0",
      "eslint": "^5.16.0",
      "mocha": "^6.1.4"
    },
    "dependencies": {
      "entities": "^1.1.2"
    },
    "bin": {
      "ansi-to-html": "bin/ansi-to-html"
    },
    "babel": {
      "presets": [
        "@babel/env"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-ansi-to-html-0.6.14-65fe6d08bba5dd9db33f44a20aec331e0010dad8-integrity/node_modules/ansi-to-html/package.json",
    "readmeFilename": "README.md",
    "readme": "## Ansi to Html\n\n[![](https://img.shields.io/travis/rburns/ansi-to-html.svg)](https://travis-ci.org/rburns/ansi-to-html/branches)\n[![](https://img.shields.io/npm/v/ansi-to-html.svg)](https://www.npmjs.com/package/ansi-to-html)\n![](https://img.shields.io/npm/dm/ansi-to-html.svg)\n\nThis was originally a port of the ansi to html converter from\n[bcat](https://github.com/rtomayko/bcat/blob/master/lib/bcat/ansi.rb) to\nJavaScript. It has since undergone quite a lot of modification.\n\nIt has a few additions:\n\n* The API has been altered to accept options in the constructor, and input in `toHtml()`.\n* ANSI codes for setting the foreground or background color to default are handled\n* the 'erase in line' escape code (`\\x1b[K`) is dropped from the output.\n\n## Installation\n\n```bash\nnpm install ansi-to-html\n```\n\n## Usage\n\n```javascript\nvar Convert = require('ansi-to-html');\nvar convert = new Convert();\n\nconsole.log(convert.toHtml('\\x1b[30mblack\\x1b[37mwhite'));\n\n/*\n    prints:\n    <span style=\"color:#000\">black<span style=\"color:#AAA\">white</span></span>\n*/\n```\n\n## Command line usage\n\nWhen using ansi-to-html from the command line the stream option is set to `true`.\nOther options can be provided. See `ansi-to-html -h` for more detail.\n\n### Process a file\n\n```bash\nansi-to-html the_filename\n```\n\n### From STDIN\n\n```bash\ngit log | ansi-to-html\n```\n\n## Options\n\nOptions can be be passed to the constructor to customize behaviour.\n\n**fg** `<CSS color values>`. The default foreground color used when reset color codes are encountered.\n\n**bg** `<CSS color values>`. The default background color used when reset color codes are encountered.\n\n**newline** `true` or `false`. Convert newline characters to `<br/>`.\n\n**escapeXML** `true` or `false`. Generate HTML/XML entities.\n\n**stream** `true` or `false`. Save style state across invocations of `toHtml()`.\n\n**colors** `Object`/`Array` (with values 0 - 255 containing CSS color values). Can override specific colors or the entire ANSI palette\n\n### Default options\n\n```json5\n{\n    fg: '#FFF',\n    bg: '#000',\n    newline: false,\n    escapeXML: false,\n    stream: false\n}\n```\n\n## Development\n\nOnce you have the git repository cloned, install the dependencies:\n\n```bash\ncd ansi-to-html\nnpm install\n```\n\n#### Lint\n\n```bash\nnpm run lint\n```\n\n#### Build\n\n```bash\nnpm run build\n```\n\n- Builds the `/src` files by running `babel`. \n- Saves the built files in `/lib` output directory. \n- Recommended to run `babel` in Watch mode - will re-build the project each time the files are changed.\n```bash\nnpm run build:watch\n```\n\n#### Test\n\n```bash\nnpm test\n```\n- Note: Runs the tests against the built files (in the `/lib` directory).\n- You also run the tests in watch mode (will rerun tests when files are changed).\n- Recommended to run the build in watch mode as well to re-build the project before the tests are run.\n\n```bash\nnpm run test:watch\n```\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ansi-to-html/-/ansi-to-html-0.6.14.tgz#65fe6d08bba5dd9db33f44a20aec331e0010dad8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ansi-to-html/-/ansi-to-html-0.6.14.tgz",
    "hash": "65fe6d08bba5dd9db33f44a20aec331e0010dad8",
    "integrity": "sha512-7ZslfB1+EnFSDO5Ju+ue5Y6It19DRnZXWv8jrGHgIlPna5Mh4jz7BV5jCbQneXNFurQcKoolaaAjHtgSBfOIuA==",
    "registry": "npm",
    "packageName": "ansi-to-html",
    "cacheIntegrity": "sha512-7ZslfB1+EnFSDO5Ju+ue5Y6It19DRnZXWv8jrGHgIlPna5Mh4jz7BV5jCbQneXNFurQcKoolaaAjHtgSBfOIuA== sha1-Zf5tCLul3Z2zP0SiCuwzHgAQ2tg="
  },
  "registry": "npm",
  "hash": "65fe6d08bba5dd9db33f44a20aec331e0010dad8"
}