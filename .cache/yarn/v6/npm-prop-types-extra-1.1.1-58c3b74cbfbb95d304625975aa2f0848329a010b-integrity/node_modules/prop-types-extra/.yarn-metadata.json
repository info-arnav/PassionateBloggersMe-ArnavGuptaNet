{
  "manifest": {
    "name": "prop-types-extra",
    "version": "1.1.1",
    "description": "React PropType Utilities",
    "main": "lib/index.js",
    "files": [
      "LICENSE",
      "README.md",
      "lib"
    ],
    "scripts": {
      "build": "rm -rf lib && babel src --out-dir lib",
      "lint": "eslint .",
      "test": "npm run lint && jest",
      "tdd": "jest --watch",
      "release": "release"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/react-bootstrap/prop-types-extra.git"
    },
    "keywords": [
      "react",
      "proptypes"
    ],
    "author": {
      "name": "Matthew L Smith",
      "email": "mtscout6@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/react-bootstrap/prop-types-extra/issues"
    },
    "homepage": "https://github.com/react-bootstrap/prop-types-extra#readme",
    "jest": {
      "roots": [
        "<rootDir>/test"
      ],
      "testRegex": "test\\.js",
      "setupTestFrameworkScriptFile": "./test/test-setup.js"
    },
    "peerDependencies": {
      "react": ">=0.14.0"
    },
    "devDependencies": {
      "babel-cli": "^6.24.1",
      "babel-eslint": "^7.2.3",
      "babel-jest": "^20.0.1",
      "babel-plugin-add-module-exports": "^0.2.1",
      "babel-preset-env": "^1.4.0",
      "babel-preset-react": "^6.24.1",
      "chai": "^3.0.0",
      "dirty-chai": "^1.2.2",
      "eslint": "^2.13.1",
      "eslint-config-airbnb": "^9.0.1",
      "eslint-config-airbnb-base": "^3.0.1",
      "eslint-plugin-import": "^1.10.2",
      "eslint-plugin-jsx-a11y": "^1.5.5",
      "eslint-plugin-mocha": "^4.0.0",
      "eslint-plugin-react": "^5.2.2",
      "jest": "^20.0.1",
      "prop-types": "^15.6.1",
      "react": "^16.3.2",
      "release-script": "^1.0.2",
      "sinon": "^2.2.0",
      "sinon-chai": "^2.10.0"
    },
    "dependencies": {
      "react-is": "^16.3.2",
      "warning": "^4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-prop-types-extra-1.1.1-58c3b74cbfbb95d304625975aa2f0848329a010b-integrity/node_modules/prop-types-extra/package.json",
    "readmeFilename": "README.md",
    "readme": "# prop-types-extra [![Travis][build-badge]][build] [![npm][npm-badge]][npm]\n\nAdditional [PropTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) for [React](https://facebook.github.io/react/).\n\n## Usage\n\n```js\nimport elementType from 'prop-types-extra/lib/elementType';\n// or\nimport { elementType } from 'prop-types-extra';\n\nconst propTypes = {\n  someProp: elementType,\n};\n```\n\nIf you want to minimize bundle size, import only the validators you use via:\n\n```js\nimport elementType from 'prop-types-extra/lib/elementType'\n```\n\n## Guide\n\n### Installation\n\n```sh\n$ npm i -S react\n$ npm i -S prop-types-extra\n```\n\n### [`all(...validators)`](/src/all.js)\n\nThis validator checks that all of the provided validators pass.\n\n```js\nconst propTypes = {\n  vertical:  PropTypes.bool.isRequired,\n\n  block: all(\n    PropTypes.bool.isRequired,\n    ({ block, vertical }) => (\n      block && !vertical ?\n        new Error('`block` requires `vertical` to be set to have any effect') :\n        null\n    ),\n  ),\n};\n```\n\nThe provided validators will be validated in order, stopping on the first failure. The combined validator will succeed only if all provided validators succeed.\n\nAs in the example, this can be used to make a type assertion along with additional semantic assertions.\n\n### [`componentOrElement`](/src/componentOrElement.js)\n\nChecks that the value is a `ReactComponent` or a `DOMElement`.\n\n```js\nconst propTypes = {\n  container: componentOrElement,\n  requiredContainer: componentOrElement.isRequired,\n};\n```\n\nThis ensures that the value is of the right type to pass to `ReactDOM.findDOMNode()`, for cases where you need a DOM node.\n\n### [`deprecated(validator, reason)`](/src/deprecated.js)\n\nThis validator will log a deprecation warning if the value is present.\n\n```js\nconst propTypes = {\n  collapsable: deprecated(PropTypes.bool, 'Use `collapsible` instead.'),\n};\n```\n\nIf the `collapsable` prop above is specified, this validator will log the warning:\n\n>The prop \\`collapsable\\` of \\`MyComponent\\` is deprecated. Use \\`collapsible\\` instead.\n\nThis validator warns instead of failing on invalid values, and will still call the underlying validator if the deprecated value is present.\n\nThis validator will only warn once on each deprecation. To clear the cache of warned messages, such as for clearing state between test cases intended to fail on deprecation warnings, call `deprecated._resetWarned()`.\n\n### [`elementType`](/src/elementType.js)\n\nChecks that the value is a React element type. This can be either a string (for DOM elements) or a `ReactClass` (for composite components).\n\n```js\nconst propTypes = {\n  Component: elementType.isRequired,\n};\n```\n\nThis ensures that the value of is the right type for creating a `ReactElement`, such as with `<Component {...props} />`.\n\n### [`isRequiredForA11y(validator)`](/src/isRequiredForA11y.js)\n\nThis validator checks that the value required for accessibility are present.\n\n```js\nconst propTypes = {\n  id: isRequiredForA11y(PropTypes.string),\n};\n```\n\nIf the `id` prop above is not specified, the validator will fail with:\n\n>The prop \\`id\\` is required to make \\`MyComponent\\` accessible for users of assistive technologies such as screen readers.\n\n[build-badge]: https://img.shields.io/travis/react-bootstrap/prop-types-extra/master.svg\n[build]: https://travis-ci.org/react-bootstrap/prop-types-extra\n\n[npm-badge]: https://img.shields.io/npm/v/prop-types-extra.svg\n[npm]: https://www.npmjs.org/package/prop-types-extra\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 react-bootstrap\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/prop-types-extra/-/prop-types-extra-1.1.1.tgz#58c3b74cbfbb95d304625975aa2f0848329a010b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/prop-types-extra/-/prop-types-extra-1.1.1.tgz",
    "hash": "58c3b74cbfbb95d304625975aa2f0848329a010b",
    "integrity": "sha512-59+AHNnHYCdiC+vMwY52WmvP5dM3QLeoumYuEyceQDi9aEhtwN9zIQ2ZNo25sMyXnbh32h+P1ezDsUpUH3JAew==",
    "registry": "npm",
    "packageName": "prop-types-extra",
    "cacheIntegrity": "sha512-59+AHNnHYCdiC+vMwY52WmvP5dM3QLeoumYuEyceQDi9aEhtwN9zIQ2ZNo25sMyXnbh32h+P1ezDsUpUH3JAew== sha1-WMO3TL+7ldMEYll1qi8ISDKaAQs="
  },
  "registry": "npm",
  "hash": "58c3b74cbfbb95d304625975aa2f0848329a010b"
}