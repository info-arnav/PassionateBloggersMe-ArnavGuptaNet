{
  "manifest": {
    "name": "vizion",
    "version": "0.2.13",
    "engines": {
      "node": ">=0.10"
    },
    "author": {
      "name": "Joni Shkurti",
      "email": "jonishkurti90@gmail.com"
    },
    "keywords": [
      "git",
      "svn",
      "hg",
      "subversion",
      "mercurial",
      "repository",
      "parser",
      "versioning",
      "revision"
    ],
    "description": "Git/Subversion/Mercurial repository metadata parser",
    "repository": {
      "type": "git",
      "url": "https://github.com/keymetrics/vizion"
    },
    "main": "index.js",
    "scripts": {
      "cover": "node_modules/.bin/istanbul cover --report html node_modules/.bin/_mocha -- -R spec test/*",
      "test": "node_modules/.bin/_mocha --require test/support/env --reporter spec --bail --check-leaks test/"
    },
    "dependencies": {
      "async": "1.5"
    },
    "devDependencies": {
      "mocha": "2.0.0",
      "should": "*",
      "shelljs": "0.6.0",
      "istanbul": "*"
    },
    "bugs": {
      "url": "https://github.com/keymetrics/vizion/issues"
    },
    "license": "Apache-2.0",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-vizion-0.2.13-1314cdee2b34116f9f5b1248536f95dbfcd6ef5f-integrity/node_modules/vizion/package.json",
    "readmeFilename": "README.md",
    "readme": "\n# Repository parser\n\nGit/Subversion/Mercurial repository metadata parser\n\n[![Build Status](https://api.travis-ci.org/keymetrics/vizion.png?branch=master)]\n\n## Example\n\n```javascript\nvar vizion = require('vizion');\n\n/**\n * Grab metadata for svn/git/hg repositories\n */\nvizion.analyze({\n  folder : '/tmp/folder'\n}, function(err, meta) {\n  if (err) throw new Error(err);\n\n  /**\n   *\n   * meta = {\n   *   type        : 'git',\n   *   ahead       : false,\n   *   unstaged    : false,\n   *   branch      : 'development',\n   *   remotes     : [ 'http', 'http ssl', 'origin' ],\n   *   remote      : 'origin',\n   *   commment    : 'This is a comment',\n   *   update_time : Tue Oct 28 2014 14:33:30 GMT+0100 (CET),\n   *   url         : 'https://github.com/keymetrics/vizion.git',\n   *   revision    : 'f0a1d45936cf7a3c969e4caba96546fd23255796',\n   *   next_rev    : null,  // null if its latest in the branch\n   *   prev_rev    : '6d6932dac9c82f8a29ff40c1d5300569c24aa2c8'\n   * }\n   *\n   */\n});\n\n/**\n * Check if a local repository is up to date with its remote\n */\nvizion.isUpToDate({\n  folder : '/tmp/folder'\n}, function(err, meta) {\n  if (err) throw new Error(err);\n\n  /**\n   *\n   * meta = {\n   *   is_up_to_date    : false,\n   *   new_revision     : '6d6932dac9c82f8a29ff40c1d5300569c24aa2c8'\n   *   current_revision : 'f0a1d45936cf7a3c969e4caba96546fd23255796'\n   * }\n   *\n   */\n});\n\n/**\n * Update the local repository to latest commit found on the remote for its current branch\n * - on fail it rollbacks to the latest commit\n */\nvizion.update({\n  folder : '/tmp/folder'\n}, function(err, meta) {\n  if (err) throw new Error(err);\n\n  /**\n   *\n   * meta = {\n   *   success           : true,\n   *   current_revision  : '6d6932dac9c82f8a29ff40c1d5300569c24aa2c8'\n   * }\n   *\n   */\n});\n\n/**\n * Revert to a specified commit\n * - Eg: this does a git reset --hard <commit_revision>\n */\nvizion.revertTo({\n  revision : 'f0a1d45936cf7a3c969e4caba96546fd23255796',\n  folder   : '/tmp/folder'\n}, function(err, data) {\n  if (err) throw new Error(err);\n\n  /**\n   *\n   * data = {\n   *   success          : true,\n   * }\n   *\n   */\n});\n\n/**\n * If a previous commit exists it checkouts on it\n */\nvizion.prev({\n  folder : '/tmp/folder'\n}, function(err, meta) {\n  if (err) throw new Error(err);\n\n  /**\n   *\n   * meta = {\n   *   success           : true,\n   *   current_revision  : '6d6932dac9c82f8a29ff40c1d5300569c24aa2c8'\n   * }\n   *\n   */\n});\n\n/**\n * If a more recent commit exists it chekouts on it\n */\nvizion.next({\n  folder : '/tmp/folder'\n}, function(err, meta) {\n  if (err) throw new Error(err);\n\n  /**\n   *\n   * meta = {\n   *   success           : false,\n   *   current_revision  : '6d6932dac9c82f8a29ff40c1d5300569c24aa2c8'\n   * }\n   *\n   */\n});\n```\n",
    "licenseText": "Copyright 2016 Keymetrics, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vizion/-/vizion-0.2.13.tgz#1314cdee2b34116f9f5b1248536f95dbfcd6ef5f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vizion/-/vizion-0.2.13.tgz",
    "hash": "1314cdee2b34116f9f5b1248536f95dbfcd6ef5f",
    "integrity": "sha1-ExTN7is0EW+fWxJIU2+V2/zW718=",
    "registry": "npm",
    "packageName": "vizion",
    "cacheIntegrity": "sha512-pDK351YiXu1f5K3PF+/ix8hu9DwWGaWUGU1hjPbLbmmCnt9fPsFmkEJoBrssAGH9r2NX+I1F7NF9HD/6CtcLqQ== sha1-ExTN7is0EW+fWxJIU2+V2/zW718="
  },
  "registry": "npm",
  "hash": "1314cdee2b34116f9f5b1248536f95dbfcd6ef5f"
}