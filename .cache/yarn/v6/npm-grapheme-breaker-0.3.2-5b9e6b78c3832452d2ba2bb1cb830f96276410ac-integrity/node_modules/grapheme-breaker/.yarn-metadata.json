{
  "manifest": {
    "name": "grapheme-breaker",
    "version": "0.3.2",
    "description": "An implementation of the Unicode grapheme cluster breaking algorithm (UAX #29)",
    "main": "src/GraphemeBreaker",
    "dependencies": {
      "brfs": "^1.2.0",
      "unicode-trie": "^0.3.1"
    },
    "devDependencies": {
      "chai": "^1.9.1",
      "coffee-script": "^1.7.1",
      "mocha": "^1.20.1",
      "request": "^2.37.0"
    },
    "scripts": {
      "test": "mocha",
      "prepublish": "coffee -c src/",
      "postpublish": "rm -rf src/*.js"
    },
    "browserify": {
      "transform": [
        "brfs"
      ]
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/devongovett/grapheme-breaker"
    },
    "keywords": [
      "unicode",
      "text",
      "break",
      "segment",
      "character",
      "grapheme cluster"
    ],
    "author": {
      "name": "Devon Govett",
      "email": "devongovett@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/devongovett/grapheme-breaker/issues"
    },
    "homepage": "https://github.com/devongovett/grapheme-breaker",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-grapheme-breaker-0.3.2-5b9e6b78c3832452d2ba2bb1cb830f96276410ac-integrity/node_modules/grapheme-breaker/package.json",
    "readmeFilename": "README.md",
    "readme": "# grapheme-breaker\nA JavaScript implementation of the Unicode grapheme cluster breaking algorithm ([UAX #29](http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries))\n\n> It is important to recognize that what the user thinks of as a “character”—a basic unit of a writing system for a \n> language—may not be just a single Unicode code point. Instead, that basic unit may be made up of multiple Unicode \n> code points. To avoid ambiguity with the computer use of the term character, this is called a user-perceived character. \n> For example, “G” + acute-accent is a user-perceived character: users think of it as a single character, yet is actually \n> represented by two Unicode code points. These user-perceived characters are approximated by what is called a grapheme cluster, \n> which can be determined programmatically.\n\n## Installation\n\nYou can install via npm\n\n    npm install grapheme-breaker\n\n## Example\n\n```javascript\nvar GraphemeBreaker = require('grapheme-breaker');\n\n// break a string into an array of grapheme clusters\n\n\nGraphemeBreaker.break('Z͑ͫ̓ͪ̂ͫ̽͏̴̙̤̞͉͚̯̞̠͍A̴̵̜̰͔ͫ͗͢L̠ͨͧͩ͘G̴̻͈͍͔̹̑͗̎̅͛́Ǫ̵̹̻̝̳͂̌̌͘!͖̬̰̙̗̿̋ͥͥ̂ͣ̐́́͜͞') // => ['Z͑ͫ̓ͪ̂ͫ̽͏̴̙̤̞͉͚̯̞̠͍', 'A̴̵̜̰͔ͫ͗͢', 'L̠ͨͧͩ͘', 'G̴̻͈͍͔̹̑͗̎̅͛́', 'Ǫ̵̹̻̝̳͂̌̌͘', '!͖̬̰̙̗̿̋ͥͥ̂ͣ̐́́͜͞']\n\n\n// or just count the number of grapheme clusters in a string\n\n\nGraphemeBreaker.countBreaks('Z͑ͫ̓ͪ̂ͫ̽͏̴̙̤̞͉͚̯̞̠͍A̴̵̜̰͔ͫ͗͢L̠ͨͧͩ͘G̴̻͈͍͔̹̑͗̎̅͛́Ǫ̵̹̻̝̳͂̌̌͘!͖̬̰̙̗̿̋ͥͥ̂ͣ̐́́͜͞') // => 6\n\n\n// use nextBreak and previousBreak to get break points starting \n// from anywhere in the string\nGraphemeBreaker.nextBreak('😜🇺🇸👍', 3) // => 6\nGraphemeBreaker.previousBreak('😜🇺🇸👍', 3) // => 2\n```\n\n## Development Notes\n\nIn order to use the library, you shouldn't need to know this, but if you're interested in\ncontributing or fixing bugs, these things might be of interest.\n\n* The `src/classes.coffee` file is automatically generated from `GraphemeBreakProperty.txt` in the Unicode \n  database by `src/generate_data.coffee`. It should be rare that you need to run this, but\n  you may if, for instance, you want to change the Unicode version.\n  \n* You can run the tests using `npm test`. They are written using `mocha`, and generated from\n  `GraphemeBreakTest.txt` from the Unicode database, which is included in the repository for performance\n  reasons while running them.\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/grapheme-breaker/-/grapheme-breaker-0.3.2.tgz#5b9e6b78c3832452d2ba2bb1cb830f96276410ac",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/grapheme-breaker/-/grapheme-breaker-0.3.2.tgz",
    "hash": "5b9e6b78c3832452d2ba2bb1cb830f96276410ac",
    "integrity": "sha1-W55reMODJFLSuiuxy4MPlidkEKw=",
    "registry": "npm",
    "packageName": "grapheme-breaker",
    "cacheIntegrity": "sha512-mB6rwkw1Z7z4z2RkFFTd/+q6Ug1gnCgjKAervAKgBeNI1mSr8E5EUWoYzFNOZsLHFArLfpk+O8X8qXC7uvuawQ== sha1-W55reMODJFLSuiuxy4MPlidkEKw="
  },
  "registry": "npm",
  "hash": "5b9e6b78c3832452d2ba2bb1cb830f96276410ac"
}