{
  "manifest": {
    "name": "static-module",
    "version": "2.2.5",
    "description": "convert module usage to inline expressions",
    "main": "index.js",
    "dependencies": {
      "concat-stream": "~1.6.0",
      "convert-source-map": "^1.5.1",
      "duplexer2": "~0.1.4",
      "escodegen": "~1.9.0",
      "falafel": "^2.1.0",
      "has": "^1.0.1",
      "magic-string": "^0.22.4",
      "merge-source-map": "1.0.4",
      "object-inspect": "~1.4.0",
      "quote-stream": "~1.0.2",
      "readable-stream": "~2.3.3",
      "shallow-copy": "~0.0.1",
      "static-eval": "^2.0.0",
      "through2": "~2.0.3"
    },
    "devDependencies": {
      "from2-string": "^1.1.0",
      "resolve": "^1.5.0",
      "source-map": "^0.6.1",
      "tape": "^4.8.0",
      "uglify-js": "3.3.12"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/substack/static-module.git"
    },
    "homepage": "https://github.com/substack/static-module",
    "keywords": [
      "ast",
      "static",
      "analysis",
      "esprima",
      "syntax",
      "tree"
    ],
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-static-module-2.2.5-bd40abceae33da6b7afb84a0e4329ff8852bfbbf-integrity/node_modules/static-module/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "# static-module\n\nconvert module usage to inline expressions\n\n# example\n\nHere's a simplified version of the [brfs](https://npmjs.org/package/brfs) module\nusing static-module.\n\nbrfs converts `fs.readFileSync(file)` calls to inline strings with the contents\nof `file` included in-place.\n\n``` js\nvar staticModule = require('static-module');\nvar quote = require('quote-stream');\nvar fs = require('fs');\n\nvar sm = staticModule({\n    fs: {\n        readFileSync: function (file) {\n            return fs.createReadStream(file).pipe(quote());\n        }\n    }\n}, { vars: { __dirname: __dirname + '/brfs' } });\nprocess.stdin.pipe(sm).pipe(process.stdout);\n```\n\ninput:\n\n```\n$ cat brfs/source.js\nvar fs = require('fs');\nvar src = fs.readFileSync(__dirname + '/x.txt');\nconsole.log(src);\n```\n\noutput:\n\n```\n$ node brfs.js < brfs/source.js \n\nvar src = \"beep boop\\n\";\nconsole.log(src);\n```\n\n# methods\n\n``` js\nvar staticModule = require('static-module')\n```\n\n## var sm = staticModule(modules, opts={})\n\nReturn a transform stream `sm` that transforms javascript source input to\njavascript source output with each property in the `modules` object expanded in\ninline form.\n\nProperties in the `modules` object can be ordinary values that will be included\ndirectly or functions that will be executed with the [statically\nevaluated](https://npmjs.org/package/static-eval) arguments from the source\nunder an optional set of `opts.vars` variables.\n\nProperty functions can return streams, in which case their contents will be\npiped directly into the source output.\n\nOtherwise, the return values of functions will be inlined into the source in\nplace as strings.\n\nUse `opts.varModules` to map whitelisted module names to definitions that can be\ndeclared in client code with `var` and will appear in static expressions like\n`opts.vars`.\n\nFor example, to make this code with `path.join()` work:\n\n``` js\nvar fs = require('fs');\nvar path = require('path');\nvar src = fs.readFileSync(path.join(__dirname, 'x.txt'), 'utf8');\nconsole.log(src);\n```\n\nyou can do:\n\n``` js\nvar staticModule = require('static-module');\nvar quote = require('quote-stream');\nvar fs = require('fs');\n\nvar sm = staticModule({\n    fs: {\n        readFileSync: function (file) {\n            return fs.createReadStream(file).pipe(quote());\n        }\n    },\n    varMods: { path: require('path') }\n}, { vars: { __dirname: __dirname + '/brfs' } });\nprocess.stdin.pipe(sm).pipe(process.stdout);\n```\n\nUse `opts.parserOpts` to set additional options for the\n[acorn](https://github.com/acornjs/acorn) parser.\n\nSet `opts.sourceMap` to `true` to generate a source map and add it as an inline\ncomment. You can add `opts.inputFilename` to configure the original file name\nthat will be listed in the source map.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install static-module\n```\n\n# license\n\nMIT\n",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/static-module/-/static-module-2.2.5.tgz#bd40abceae33da6b7afb84a0e4329ff8852bfbbf",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/static-module/-/static-module-2.2.5.tgz",
    "hash": "bd40abceae33da6b7afb84a0e4329ff8852bfbbf",
    "integrity": "sha512-D8vv82E/Kpmz3TXHKG8PPsCPg+RAX6cbCOyvjM6x04qZtQ47EtJFVwRsdov3n5d6/6ynrOY9XB4JkaZwB2xoRQ==",
    "registry": "npm",
    "packageName": "static-module",
    "cacheIntegrity": "sha512-D8vv82E/Kpmz3TXHKG8PPsCPg+RAX6cbCOyvjM6x04qZtQ47EtJFVwRsdov3n5d6/6ynrOY9XB4JkaZwB2xoRQ== sha1-vUCrzq4z2mt6+4Sg5DKf+IUr+78="
  },
  "registry": "npm",
  "hash": "bd40abceae33da6b7afb84a0e4329ff8852bfbbf"
}