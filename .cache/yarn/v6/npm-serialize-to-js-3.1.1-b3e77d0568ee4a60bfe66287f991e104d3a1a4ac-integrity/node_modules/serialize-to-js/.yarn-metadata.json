{
  "manifest": {
    "name": "serialize-to-js",
    "version": "3.1.1",
    "description": "serialize objects to javascript",
    "keywords": [
      "javascript",
      "objects",
      "serialize"
    ],
    "homepage": "https://github.com/commenthol/serialize-to-js",
    "bugs": {
      "url": "https://github.com/commenthol/serialize-to-js/issues"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/commenthol/serialize-to-js.git"
    },
    "license": "MIT",
    "author": {
      "name": "commenthol",
      "email": "commenthol@gmail.com"
    },
    "main": "lib",
    "module": "src",
    "scripts": {
      "all": "npm run clean && npm run lint && npm run build &&  npm test",
      "build": "babel -d lib src",
      "clean": "rimraf lib doc coverage .nyc_output *.tgz",
      "coverage": "nyc -r text -r html npm test",
      "lint": "eslint src test",
      "prepublishOnly": "npm run all",
      "readme": "markedpp --githubid -i README.md -o README.md",
      "test": "mocha"
    },
    "babel": {
      "presets": [
        "@babel/preset-env"
      ]
    },
    "eslintConfig": {
      "env": {
        "mocha": true
      },
      "extends": "standard",
      "plugins": [
        "standard"
      ],
      "rules": {
        "key-spacing": 0
      }
    },
    "dependencies": {},
    "devDependencies": {
      "@babel/cli": "^7.8.3",
      "@babel/core": "^7.8.3",
      "@babel/preset-env": "^7.8.3",
      "eslint": "^6.8.0",
      "eslint-config-standard": "^14.1.0",
      "eslint-plugin-import": "^2.20.0",
      "eslint-plugin-node": "^11.0.0",
      "eslint-plugin-promise": "^4.2.1",
      "eslint-plugin-standard": "^4.0.1",
      "mocha": "^7.0.1",
      "nyc": "^15.0.0",
      "rimraf": "^3.0.0"
    },
    "engines": {
      "node": ">=4.0.0"
    },
    "maintainers": "commenthol <commenthol@gmail.com>",
    "mocha": {
      "check-leaks": true
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-serialize-to-js-3.1.1-b3e77d0568ee4a60bfe66287f991e104d3a1a4ac-integrity/node_modules/serialize-to-js/package.json",
    "readmeFilename": "README.md",
    "readme": "# serialize-to-js\n\n> serialize objects to javascript\n\n[![NPM version](https://badge.fury.io/js/serialize-to-js.svg)](https://www.npmjs.com/package/serialize-to-js/)\n[![Build Status](https://secure.travis-ci.org/commenthol/serialize-to-js.svg?branch=master)](https://travis-ci.org/commenthol/serialize-to-js)\n\nSerialize objects into a string while checking circular structures and respecting references.\n\nThe following Objects are supported\n\n- String\n- Number\n- Boolean\n- Object\n- Array\n- RegExp\n- Error\n- Date\n- Buffer\n- Int8Array, Uint8Array, Uint8ClampedArray\n- Int16Array, Uint16Array\n- Int32Array, Uint32Array, Float32Array\n- Float64Array\n- Set\n- Map\n\n## Table of Contents\n\n<!-- !toc (minlevel=2 omit=\"Table of Contents\") -->\n\n* [Methods](#methods)\n  * [serialize](#serialize)\n* [Contribution and License Agreement](#contribution-and-license-agreement)\n* [License](#license)\n\n<!-- toc! -->\n\n## Methods\n\n### serialize\n\n`serialize(source, opts, opts.ignoreCircular, opts.reference)`\n\nserializes an object to javascript\n\n#### Example - serializing regex, date, buffer, ...\n\n```js\nconst serialize = require('serialize-to-js')\nconst obj = {\n  str: '<script>var a = 0 > 1</script>',\n  num: 3.1415,\n  bool: true,\n  nil: null,\n  undef: undefined,\n  obj: { foo: 'bar' },\n  arr: [1, '2'],\n  regexp: /^test?$/,\n  date: new Date(),\n  buffer: new Buffer('data'),\n  set: new Set([1, 2, 3]),\n  map: new Map([['a': 1],['b': 2]])\n}\nconsole.log(serialize(obj))\n//> '{str: \"\\u003Cscript\\u003Evar a = 0 \\u003E 1\\u003C\\u002Fscript\\u003E\",\n//>   num: 3.1415, bool: true, nil: null, undef: undefined,\n//>   obj: {foo: \"bar\"}, arr: [1, \"2\"], regexp: new RegExp(\"^test?$\", \"\"),\n//>   date: new Date(\"2019-12-29T10:37:36.613Z\"),\n//>   buffer: Buffer.from(\"ZGF0YQ==\", \"base64\"), set: new Set([1, 2, 3]),\n//>   map: new Map([[\"a\", 1], [\"b\", 2]])}'\n```\n\n#### Example - serializing while respecting references\n\n```js\nvar serialize = require('serialize-to-js')\nvar obj = { object: { regexp: /^test?$/ } };\nobj.reference = obj.object;\nvar opts = { reference: true };\nconsole.log(serialize(obj, opts));\n//> {object: {regexp: /^test?$/}}\nconsole.log(opts.references);\n//> [ [ '.reference', '.object' ] ]\n```\n\n**Parameters**\n\n**source**: `Object | Array | function | Any`, source to serialize  \n**opts**: `Object`, options  \n**opts.ignoreCircular**: `Boolean`, ignore circular objects  \n**opts.reference**: `Boolean`, reference instead of a copy (requires post-processing of opts.references)  \n**opts.unsafe**: `Boolean`, do not escape chars `<>/`  \n**Returns**: `String`, serialized representation of `source`\n\n\n## Contribution and License Agreement\n\nIf you contribute code to this project, you are implicitly allowing your\ncode to be distributed under the MIT license. You are also implicitly\nverifying that all code is your original work or correctly attributed\nwith the source of its origin and licence.\n\n## License\n\nCopyright (c) 2016- commenthol (MIT License)\n\nSee [LICENSE][] for more info.\n\n[LICENSE]: ./LICENSE\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016-present commenthol\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/serialize-to-js/-/serialize-to-js-3.1.1.tgz#b3e77d0568ee4a60bfe66287f991e104d3a1a4ac",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/serialize-to-js/-/serialize-to-js-3.1.1.tgz",
    "hash": "b3e77d0568ee4a60bfe66287f991e104d3a1a4ac",
    "integrity": "sha512-F+NGU0UHMBO4Q965tjw7rvieNVjlH6Lqi2emq/Lc9LUURYJbiCzmpi4Cy1OOjjVPtxu0c+NE85LU6968Wko5ZA==",
    "registry": "npm",
    "packageName": "serialize-to-js",
    "cacheIntegrity": "sha512-F+NGU0UHMBO4Q965tjw7rvieNVjlH6Lqi2emq/Lc9LUURYJbiCzmpi4Cy1OOjjVPtxu0c+NE85LU6968Wko5ZA== sha1-s+d9BWjuSmC/5mKH+ZHhBNOhpKw="
  },
  "registry": "npm",
  "hash": "b3e77d0568ee4a60bfe66287f991e104d3a1a4ac"
}